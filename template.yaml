AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Cloud formation for a DevOps Challenge

Resources:

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: live
      DefinitionBody:
        swagger: '2.0'
        info:
          title: DevOps Challenge
          version: '1.0'
        paths:
          /api:
            get:
              responses:
                '200':
                  description: '200 response'
                  schema:
                    type: 'string'
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiFunction.Arn}/invocations
                passthroughBehavior: 'when_no_match'
                httpMethod: GET
                type: 'aws_proxy'
    
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: api_publico.lambda_handler
      Runtime: python3.11
      CodeUri: ./lambda_api_functions/
      AutoPublishAlias: live
      
  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub statemachine-${AWS::StackName}
      DefinitionUri: sm_def.yaml
      DefinitionSubstitutions: 
        ApiFunction: !Ref ApiFunction
      Role: !GetAtt StateMachineRole.Arn

  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub statemachine-role-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  InvokeFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub statemachine-invoke-function-policy-${AWS::StackName}
      Roles:
        - !Ref StateMachineRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource: '*'